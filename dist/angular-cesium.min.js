angular.module("angularCesium",["observableCollection"]),angular.module("angularCesium").service("BillBoardAttributes",["$parse",function(e){this.calcAttributes=function(i,o){var r={image:e(i.image)(o)},n=e(i.position)(o);r.position=Cesium.Cartesian3.fromDegrees(Number(n.longitude)||0,Number(n.latitude)||0,Number(n.altitude)||0);var t=e(i.color)(o);return t&&(r.color=Cesium.Color.fromCssColorString(t)),r}}]),angular.module("angularCesium").factory("Cesium",function(){return Cesium}),angular.module("angularCesium").directive("acBillboardsLayer",["$parse","ObservableCollection","BillBoardAttributes","Cesium",function(e,i,o,r){return{restrict:"E",require:"^acMap",controller:["$scope","$attrs",function(e,i){function o(){if(i.observableCollection)throw new Error("cannot get collection if layer is bound to ObservableCollection");return e.collection}this.getBillboardCollection=o}],link:{pre:function(n,t,l,a){function u(e){var i={};i[g]=e;var r=o.calcAttributes(l,i);return n.collection.add(r)}function c(e,i){var o=n.collection.get(i);o.position=r.Cartesian3.fromDegrees(Number(e.position.longitude)||0,Number(e.position.latitude)||0,Number(e.position.altitude)||0),o.image=e.image,o.color=r.Color.fromCssColorString(e.color)}function s(e,i){n.collection.remove(n.collection.get(i))}if(n.collection=new r.BillboardCollection,l.observableCollection){var m=/\s*([\$\w]+)\s+in\s+((?:[\$\w]+\.)*[\$\w]+)/,d=l.observableCollection.match(m),g=d[1],C=e(d[2])(n);if(!C instanceof i)throw new Error("observable-collection must be of type ObservableCollection.");angular.forEach(C.getData(),function(e){u(e)}),C.onAdd(u),C.onUpdate(c),C.onRemove(s)}a.getCesiumWidget().scene.primitives.add(n.collection),n.$on("$destroy",function(){a.getCesiumWidget().scene.primitives.remove(n.collection)})}}}}]),angular.module("angularCesium").directive("acBillboard",["BillBoardAttributes",function(e){return{restrict:"E",require:"^acBillboardsLayer",link:function(i,o,r,n){var t=e.calcAttributes(r,i),l=n.getBillboardCollection().add(t);i.$on("$destroy",function(){n.getBillboardCollection().remove(l)})}}}]),angular.module("angularCesium").directive("acComplexLayer",["$log",function(e){return{restrict:"E",require:"^acMap",compile:function(i,o){o.observableCollection&&angular.forEach(i.children(),function(o){var r=void 0;"BILLBOARD"===o.tagName?r=angular.element("<billboards-layer></billboards-layer>"):"LABEL"===o.tagName&&(r=angular.element("<labels-layer></labels-layer>")),r?(angular.forEach(o.attributes,function(e){r.attr(e.name,e.value)}),angular.forEach(i[0].attributes,function(e){angular.element(o).attr(e.name)||r.attr(e.name,e.value)}),angular.element(o).replaceWith(r)):(e.warn("Found an unknown child of of complex-layer. Removing..."),angular.element(o).remove())})}}}]),angular.module("angularCesium").directive("acLabel",function(){return{restrict:"E",require:"^acLabelsLayer",scope:{color:"&",text:"&",position:"&"},link:function(e,i,o,r){var n={},t=e.position();n.position=Cesium.Cartesian3.fromDegrees(Number(t.longitude)||0,Number(t.latitude)||0,Number(t.altitude)||0);var l=e.color();l&&(n.color=l),n.text=e.text();var a=r.getLabelCollection().add(n);e.$on("$destroy",function(){r.getLabelCollection().remove(a)})}}}),angular.module("angularCesium").directive("acLabelsLayer",function(){return{restrict:"E",require:"^acMap",scope:{},controller:["$scope",function(e){this.getLabelCollection=function(){return e.collection}}],link:{pre:function(e,i,o,r){e.collection=new Cesium.LabelCollection,r.getCesiumWidget().scene.primitives.add(e.collection),e.$on("$destroy",function(){r.getCesiumWidget().scene.primitives.remove(e.collection)})}}}}),angular.module("angularCesium").directive("acMap",function(){function e(e){return 2==e?Cesium.SceneMode.SCENE2D:2.5==e?Cesium.SceneMode.COLUMBUS_VIEW:Cesium.SceneMode.SCENE3D}return{restrict:"E",template:'<div> <ng-transclude></ng-transclude> <div class="map-container"></div> </div>',transclude:!0,scope:{dimensions:"@"},controller:["$scope",function(e){this.getCesiumWidget=function(){return e.cesium}}],link:{pre:function(i,o){i.dimensions||(i.dimensions=3),i.cesium=new Cesium.CesiumWidget(o.find("div")[0],{sceneMode:e(i.dimensions)})}}}}),angular.module("angularCesium").directive("acPolyline",function(){return{restrict:"E",require:"^acPolylinesLayer",scope:{color:"&",width:"&",positions:"&"},link:function(e,i,o,r){var n={};if(!angular.isDefined(e.positions)||!angular.isFunction(e.positions))throw"Polyline positions must be defined as a function";var t=e.positions();n.positions=[],angular.forEach(t,function(e){n.positions.push(Cesium.Cartesian3.fromDegrees(Number(e.longitude)||0,Number(e.latitude)||0,Number(e.altitude)||0))});var l=Cesium.Color.fromCssColorString("black");angular.isDefined(e.color)&&angular.isFunction(e.color)&&(l=Cesium.Color.fromCssColorString(e.color())),n.material=Cesium.Material.fromType("Color"),n.material.uniforms.color=l,n.width=1,angular.isDefined(e.width)&&angular.isFunction(e.width)&&(n.width=e.width());var a=r.getPolylineCollection().add(n);e.$on("$destroy",function(){r.getPolylineCollection().remove(a)})}}}),angular.module("angularCesium").directive("acPolylinesLayer",function(){return{restrict:"E",require:"^acMap",scope:{},controller:["$scope",function(e){this.getPolylineCollection=function(){return e.collection}}],link:{pre:function(e,i,o,r){e.collection=new Cesium.PolylineCollection,r.getCesiumWidget().scene.primitives.add(e.collection),e.$on("$destroy",function(){r.getCesiumWidget().scene.primitives.remove(e.collection)})}}}}),angular.module("angularCesium").directive("acWebMapServiceLayer",function(){return{restrict:"E",require:"^acMap",scope:{url:"&",layers:"&"},controller:["$scope",function(){}],link:function(e,i,o,r){var n=new Cesium.WebMapServiceImageryProvider({url:e.url(),layers:e.layers()}),t=r.getCesiumWidget().scene.imageryLayers.addImageryProvider(n);e.$on("$destroy",function(){r.getCesiumWidget().scene.imageryLayers.remove(t)})}}});